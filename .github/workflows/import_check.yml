name: Import check

permissions:
  contents: read

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  import-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup environment and install deps (non-interactive)
        run: |
          bash scripts/setup_env_and_test.sh --yes --no-apt --with-models --with-dev

      - name: Run import-only verifier
        id: import_check
        run: |
          set -e
          python3 scripts/verify_imports.py

      - name: Upload import report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: import_report
          path: scripts/import_report.json

      - name: Run pytest
        run: |
          pytest -q --junitxml=tests.xml || true

      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: tests.xml

  smoke-test:
    needs: import-check
    runs-on: ubuntu-latest
    if: success() && github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install base deps
        run: |
          python -m pip install --upgrade pip
          pip install -r deployment/requirements.base.txt

      - name: Start minimal server in background
        run: |
          nohup python3 ai/server_minimal.py > server_dependency.log 2>&1 &
          sleep 2

      - name: Wait for port 5000
        run: |
          for i in {1..15}; do
            if curl -sSf http://127.0.0.1:5000/ >/dev/null 2>&1; then
              echo OK
              exit 0
            fi
            sleep 2
          done
          echo "Server didn't start in time" >&2
          exit 2

      - name: Run smoke curl tests
        run: |
          curl -v http://127.0.0.1:5000/
          curl -X POST http://127.0.0.1:5000/ask -H "Content-Type: application/json" -d '{"query":"healthcheck"}' || true

      - name: Upload server log and import_report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-artifacts
          path: |
            server_dependency.log
            scripts/import_report.json
